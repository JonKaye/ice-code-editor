{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA [Map] is an associative container, mapping a key to a value.\nNull values are supported, but null keys are not.\n","uri":"dart-sdk/lib/core/map.dart","name":"Map","id":"Map","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns whether this map contains the given [value].\n","name":"containsValue","id":"containsValue1()","children":[{"ref":{"refId":"dart.core/Map/V","name":"V"},"name":"value","id":"value","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns whether this map contains the given [key].\n","name":"containsKey","id":"containsKey1()","children":[{"ref":{"refId":"dart.core/Map/K","name":"K"},"name":"key","id":"key","kind":"param"}],"line":"31","kind":"method"},{"returnType":{"refId":"dart.core/Map/V","name":"V"},"isOperator":true,"comment":"\nReturns the value for the given [key] or null if [key] is not\nin the map. Because null values are supported, one should either\nuse containsKey to distinguish between an absent key and a null\nvalue, or use the [putIfAbsent] method.\n","name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/Map/K","name":"K"},"name":"key","id":"key","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"comment":"\nAssociates the [key] with the given [value].\n","name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/Map/K","name":"K"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/Map/V","name":"V"},"name":"value","id":"value","kind":"param"}],"line":"44","kind":"method"},{"returnType":{"refId":"dart.core/Map/V","name":"V"},"comment":"\nIf [key] is not associated to a value, calls [ifAbsent] and\nupdates the map by mapping [key] to the value returned by\n[ifAbsent]. Returns the value in the map.\n\nIt is an error to add or remove keys from map during the call to\n[ifAbsent].\n","name":"putIfAbsent","id":"putIfAbsent2()","children":[{"ref":{"refId":"dart.core/Map/K","name":"K"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"ifAbsent","id":"ifAbsent","children":[{"returnType":{"refId":"dart.core/Map/V","name":"V"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"54","kind":"method"},{"returnType":{"refId":"dart.core/Map/V","name":"V"},"comment":"\nRemoves the association for the given [key]. Returns the value for\n[key] in the map or null if [key] is not in the map. Note that values\ncan be null and a returned null value does not always imply that the\nkey is absent.\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart.core/Map/K","name":"K"},"name":"key","id":"key","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all pairs from the map.\n","name":"clear","id":"clear0()","line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApplies [f] to each {key, value} pair of the map.\n\nIt is an error to add or remove keys from the map during iteration.\n","name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Map/K","name":"K"},"uri":"dart-sdk/lib/core/map.dart","name":"key","id":"key","line":"74","kind":"param"},{"ref":{"refId":"dart.core/Map/V","name":"V"},"uri":"dart-sdk/lib/core/map.dart","name":"value","id":"value","line":"74","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"74","kind":"method"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Map/K","name":"K"}],"name":"Iterable"},"comment":"\nThe keys of [this].\n","name":"keys","id":"keys","line":"80","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Map/V","name":"V"}],"name":"Iterable"},"comment":"\nThe values of [this].\n","name":"values","id":"values","line":"85","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe number of {key, value} pairs in the map.\n","name":"length","id":"length","line":"90","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if there is no {key, value} pair in the map.\n","name":"isEmpty","id":"isEmpty","line":"95","kind":"property"},{"comment":"\nCreates a map with the default implementation.\n","name":"Map","id":"Map0()","line":"15","kind":"constructor"},{"comment":"\nCreates a [Map] that contains all key value pairs of [other].\n","name":"Map.from","id":"Map.from1()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/Map/K","name":"K"},{"refId":"dart.core/Map/V","name":"V"}],"name":"Map"},"name":"other","id":"other","kind":"param"}],"line":"20","kind":"constructor"},{"name":"K","id":"K","kind":"typeparam"},{"name":"V","id":"V","kind":"typeparam"}],"line":"11","kind":"class"}],"line":"5","kind":"library"},{"uri":"dart-sdk/lib/collection/collection.dart","name":"dart:collection","id":"dart.collection","children":[{"interfaces":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.collection/HashMap/K","name":"K"},{"refId":"dart.collection/HashMap/V","name":"V"}],"name":"Map"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/collection/hash_map.dart","name":"HashMap","id":"HashMap","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"containsKey","id":"containsKey1()","children":[{"ref":{"refId":"dart.collection/HashMap/K","name":"K"},"name":"key","id":"key","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"containsValue","id":"containsValue1()","children":[{"ref":{"refId":"dart.collection/HashMap/V","name":"V"},"name":"value","id":"value","kind":"param"}],"line":"21","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addAll","id":"addAll1()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.collection/HashMap/K","name":"K"},{"refId":"dart.collection/HashMap/V","name":"V"}],"name":"Map"},"name":"other","id":"other","kind":"param"}],"line":"23","kind":"method"},{"returnType":{"refId":"dart.collection/HashMap/V","name":"V"},"isOperator":true,"name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.collection/HashMap/K","name":"K"},"name":"key","id":"key","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.collection/HashMap/K","name":"K"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.collection/HashMap/V","name":"V"},"name":"value","id":"value","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.collection/HashMap/V","name":"V"},"name":"putIfAbsent","id":"putIfAbsent2()","children":[{"ref":{"refId":"dart.collection/HashMap/K","name":"K"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"ifAbsent","id":"ifAbsent","children":[{"returnType":{"refId":"dart.collection/HashMap/V","name":"V"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart.collection/HashMap/V","name":"V"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart.collection/HashMap/K","name":"K"},"name":"key","id":"key","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"31","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"action","id":"action","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/HashMap/K","name":"K"},"uri":"dart-sdk/lib/collection/hash_map.dart","name":"key","id":"key","line":"33","kind":"param"},{"ref":{"refId":"dart.collection/HashMap/V","name":"V"},"uri":"dart-sdk/lib/collection/hash_map.dart","name":"value","id":"value","line":"33","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"33","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"35","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"14","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"15","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/HashMap/K","name":"K"}],"name":"Iterable"},"name":"keys","id":"keys","line":"17","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/HashMap/V","name":"V"}],"name":"Iterable"},"name":"values","id":"values","line":"18","kind":"property"},{"name":"HashMap","id":"HashMap0()","line":"8","kind":"constructor"},{"name":"HashMap.from","id":"HashMap.from1()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.collection/HashMap/K","name":"K"},{"refId":"dart.collection/HashMap/V","name":"V"}],"name":"Map"},"name":"other","id":"other","kind":"param"}],"line":"10","kind":"constructor"},{"name":"K","id":"K","kind":"typeparam"},{"name":"V","id":"V","kind":"typeparam"}],"line":"7","kind":"class"}],"line":"5","kind":"library"}],"uri":"file:///home/chris/repos/ice-code-editor/lib/store.dart","id":"ice_store","children":[{"interfaces":[{"refId":"dart.collection/HashMap","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.collection/HashMap","name":"HashMap"}],"name":"HashMap"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nPersistent storage for ICE projects.\n\nProjects are unique by title, which is used to lookup projects in the\nstore. The list of projects is guaranteed to remain ordered by last\nmodification so that the most recently worked on projects are listed\nfirst. After every update, the list is sync'd with localStorage to prevent\nwork from being lost.\n","name":"Store","id":"Store","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"encode","id":"encode1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"string","id":"string","kind":"param"}],"line":"25","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"decode","id":"decode1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"string","id":"string","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"data","id":"data","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"_indexOfKey","isPrivate":true,"id":"_indexOfKey1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"45","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_updateAtIndex","isPrivate":true,"id":"_updateAtIndex2()","children":[{"name":"i","id":"i","kind":"param"},{"name":"data","id":"data","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"dart.collection/HashMap","name":"HashMap"},"isOperator":true,"name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"refresh","id":"refresh0()","line":"74","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sync","isPrivate":true,"id":"_sync0()","line":"76","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"35","kind":"property"},{"ref":{"refId":"dart.core/List","name":"List"},"name":"projects","id":"projects","line":"65","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"The key used to identify the data in localStorage.","name":"codeEditor","id":"codeEditor","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/List","name":"List"},"name":"_projects","isPrivate":true,"id":"_projects","line":"21","kind":"variable"},{"name":"Store","id":"Store0()","line":"23","kind":"constructor"}],"line":"18","kind":"class"}],"line":"1","kind":"library"}